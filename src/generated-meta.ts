// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info
export const publisher = "kutius"
export const name = "ace-thief-book"
export const version = "0.1.2"
export const displayName = "ace-thief-book"
export const description = undefined
export const extensionId = `${publisher}.${name}`

/**
 * Type union of all commands
 */
export type CommandKey = 
  | "ace-thief-book.showFilePicker"
  | "ace-thief-book.nextPage"
  | "ace-thief-book.prevPage"
  | "ace-thief-book.gotoPage"
  | "ace-thief-book.toggleStatusbar"
  | "ace-thief-book.autoTurn"

/**
 * Commands map registed by `kutius.ace-thief-book`
 */
export const commands = {
  /**
   * 选择文本文件
   * @value `ace-thief-book.showFilePicker`
   */
  showFilePicker: "ace-thief-book.showFilePicker",
  /**
   * 下一页
   * @value `ace-thief-book.nextPage`
   */
  nextPage: "ace-thief-book.nextPage",
  /**
   * 上一页
   * @value `ace-thief-book.prevPage`
   */
  prevPage: "ace-thief-book.prevPage",
  /**
   * 跳转到指定页
   * @value `ace-thief-book.gotoPage`
   */
  gotoPage: "ace-thief-book.gotoPage",
  /**
   * 显示/隐藏状态栏
   * @value `ace-thief-book.toggleStatusbar`
   */
  toggleStatusbar: "ace-thief-book.toggleStatusbar",
  /**
   * 自动翻页
   * @value `ace-thief-book.autoTurn`
   */
  autoTurn: "ace-thief-book.autoTurn",
} satisfies Record<string, CommandKey>

/**
 * Type union of all configs
 */
export type ConfigKey = 
  | "ace-thief-book.filePath"
  | "ace-thief-book.currentPage"
  | "ace-thief-book.isAutoTurn"
  | "ace-thief-book.autoTurnInterval"

export interface ConfigKeyTypeMap {
  "ace-thief-book.filePath": string,
  "ace-thief-book.currentPage": number,
  "ace-thief-book.isAutoTurn": boolean,
  "ace-thief-book.autoTurnInterval": number,
}

export interface ConfigShorthandMap {
  filePath: "ace-thief-book.filePath",
  currentPage: "ace-thief-book.currentPage",
  isAutoTurn: "ace-thief-book.isAutoTurn",
  autoTurnInterval: "ace-thief-book.autoTurnInterval",
}

export interface ConfigShorthandTypeMap {
  filePath: string,
  currentPage: number,
  isAutoTurn: boolean,
  autoTurnInterval: number,
}

export interface ConfigItem<T extends keyof ConfigKeyTypeMap> {
  key: T,
  default: ConfigKeyTypeMap[T],
}


/**
 * Configs map registered by `kutius.ace-thief-book`
 */
export const configs = {
  /**
   * 文本文件路径
   * @key `ace-thief-book.filePath`
   * @default `""`
   * @type `string`
   */
  filePath: {
    key: "ace-thief-book.filePath",
    default: "",
  } as ConfigItem<"ace-thief-book.filePath">,
  /**
   * 当前页码
   * @key `ace-thief-book.currentPage`
   * @default `1`
   * @type `number`
   */
  currentPage: {
    key: "ace-thief-book.currentPage",
    default: 1,
  } as ConfigItem<"ace-thief-book.currentPage">,
  /**
   * 自动翻页
   * @key `ace-thief-book.isAutoTurn`
   * @default `false`
   * @type `boolean`
   */
  isAutoTurn: {
    key: "ace-thief-book.isAutoTurn",
    default: false,
  } as ConfigItem<"ace-thief-book.isAutoTurn">,
  /**
   * 自动翻页间隔
   * @key `ace-thief-book.autoTurnInterval`
   * @default `2500`
   * @type `number`
   */
  autoTurnInterval: {
    key: "ace-thief-book.autoTurnInterval",
    default: 2500,
  } as ConfigItem<"ace-thief-book.autoTurnInterval">,
}

export interface ScopedConfigKeyTypeMap {
  "filePath": string,
  "currentPage": number,
  "isAutoTurn": boolean,
  "autoTurnInterval": number,
}

export const scopedConfigs = {
  scope: "ace-thief-book",
  defaults: {
    "filePath": "",
    "currentPage": 1,
    "isAutoTurn": false,
    "autoTurnInterval": 2500,
  } satisfies ScopedConfigKeyTypeMap,
}

export interface NestedConfigs {
  "ace-thief-book": {
    "filePath": string,
    "currentPage": number,
    "isAutoTurn": boolean,
    "autoTurnInterval": number,
  },
}

export interface NestedScopedConfigs {
  "filePath": string,
  "currentPage": number,
  "isAutoTurn": boolean,
  "autoTurnInterval": number,
}

